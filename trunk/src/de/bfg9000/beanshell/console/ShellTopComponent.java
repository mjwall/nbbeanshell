/*
 * nbBeanShell -- a integration of BeanScript into the NetBeans IDE
 * Copyright (C) 2011 Thomas Werner
 *
 * This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General
 * Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any
 * later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 */
package de.bfg9000.beanshell.console;

import bsh.EvalError;
import bsh.Interpreter;
import bsh.util.JConsole;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;

/**
 * Top component which displays a BeanShell console.
 *
 * @author Thomas Werner
 */
@ConvertAsProperties(dtd = "-//de.bfg9000.beanshell//Shell//EN", autostore = false)
@TopComponent.Description(preferredID = "ShellTopComponent",
                          iconBase="de/bfg9000/beanshell/icons/icon.gif",
                          persistenceType = TopComponent.PERSISTENCE_NEVER)
@TopComponent.Registration(mode = "output", openAtStartup = false)
@ActionID(category = "Window", id = "de.bfg9000.beanshell.ShellTopComponent")
@ActionReference(path = "Menu/Window/Other", position = 100)
@TopComponent.OpenActionRegistration(displayName = "#CTL_ShellAction", preferredID = "ShellTopComponent")
public final class ShellTopComponent extends TopComponent {

    private static final long serialVersionUID = 2451386404816691136L;

    private ShellThread shellRunner;

    public ShellTopComponent() {
        initComponents();

        setName(NbBundle.getMessage(ShellTopComponent.class, "CTL_ShellTopComponent"));
        setToolTipText(NbBundle.getMessage(ShellTopComponent.class, "HINT_ShellTopComponent"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        removeAll();

        final JConsole console = new JConsole();
        final Interpreter interpreter = new Interpreter(console);
        add(console, java.awt.BorderLayout.CENTER);

        shellRunner = new ShellThread(interpreter);
        shellRunner.start();
    }

    @Override
    public void componentClosed() {
        if((null != shellRunner) && shellRunner.isAlive())
            shellRunner.stop();
    }

    void writeProperties(java.util.Properties p) { }

    void readProperties(java.util.Properties p) { }

    /**
     * A Thread subclass that catches the ThreadDeath. We do not want it to be propagated to the UI.
     */
    private static class ShellThread extends Thread {
        
        private final Interpreter interpreter;
        
        public ShellThread(Interpreter runnable) {
            interpreter = runnable;
        }
        
        @Override
        public void run() {
            try {
                interpreter.set("bsh.system.shutdownOnExit", false);
                interpreter.run();
            } catch(EvalError ee) {   /* That should not happen            */ 
            } catch(ThreadDeath td) { /* That's OK - we wanted it that way */ }
        }
    }
    
}
